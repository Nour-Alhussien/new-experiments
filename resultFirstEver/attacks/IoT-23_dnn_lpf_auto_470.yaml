attack:
  can_validate: false
  config: {alpha: 0.01, lambda_: 0.5, max_iters: 100}
  name: LowProFool
classifier:
  config:
    layers: [64, 32]
    model_fit: {batch_size: 32, epochs: 80, shuffle: true, verbose: 0}
  name: Neural Network
experiment:
  attrs: {0: proto=udp, 1: proto=tcp, 2: proto=icmp, 3: duration, 4: orig_bytes, 5: resp_bytes,
    6: conn_state=S0, 7: conn_state=SF, 8: conn_state=other, 9: missed_bytes, 10: history=D,
    11: history=Dd, 12: history=S, 13: history=other, 14: orig_pkts, 15: orig_ip_bytes,
    16: resp_pkts, 17: resp_ip_bytes, 18: label}
  attrs_ranges:
    conn_state=S0: [0, 1]
    conn_state=SF: [0, 1]
    conn_state=other: [0, 1]
    duration: [0, 503]
    history=D: [0, 1]
    history=Dd: [0, 1]
    history=S: [0, 1]
    history=other: [0, 1]
    missed_bytes: [0, 5792]
    orig_bytes: [0, 952]
    orig_ip_bytes: [0, 204400]
    orig_pkts: [0, 5110]
    proto=icmp: [0, 1]
    proto=tcp: [0, 1]
    proto=udp: [0, 1]
    resp_bytes: [0, 164266]
    resp_ip_bytes: [0, 168910]
    resp_pkts: [0, 184]
  capture_utc: 1733193556473998200
  class_distribution: {0: 5000, 1: 5000}
  config: config/iot23.yaml
  dataset: data/ctu_1-8-34.csv
  description: sampled from IoT-23 malware captures 1-1, 8-1, 34-1
  duration_sec: 5100.9
  end: 1733193555469968800
  k_folds: 5
  n_attributes: 19
  n_classes: 2
  n_records: 10000
  name: IoT-23
  start: 1733188454607459000
  system:
    cpu_current_frequency: 3600.0
    cpu_max_frequency: 3600.0
    cpu_min_frequency: 0.0
    cpu_physical_cores: 8
    cpu_total_cores: 16
    cpu_total_usage: 14.7
    cpu_usage_per_core: [12.3, 1.6, 0.0, 0.0, 0.0, 34.4, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 1.6, 1.6]
    machine: AMD64
    processor: Intel64 Family 6 Model 158 Stepping 12, GenuineIntel
    python_runtime: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916
      64 bit (AMD64)]
    release: '10'
    system: Windows
    version: 10.0.19041
    virtual_mem_available: 16.86GB
    virtual_mem_percentage: 47.2
    virtual_mem_total_size: 31.93GB
    virtual_mem_used: 15.07GB
folds:
  accuracy: [0.978, 0.977, 0.9775, 0.977, 0.9775]
  dur: [1014314845500, 1027725193400, 1020312179700, 1008958685400, 1010226716400]
  f_score: [0.978218, 0.97734, 0.977952, 0.977842, 0.978145]
  n_evasions: [1956, 1954, 1955, 1954, 1955]
  n_records: [2000, 2000, 2000, 2000, 2000]
  n_valid: [2000, 2000, 2000, 2000, 2000]
  n_valid_evades: [1956, 1954, 1955, 1954, 1955]
  precision: [0.957364, 0.955684, 0.956855, 0.956645, 0.957224]
  recall: [1.0, 1.0, 1.0, 1.0, 1.0]
invalid_rows: []
validation:
  dependencies:
    a: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    b: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    c: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    d: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    e: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    f: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    g: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
    h: [0, 1, 6, 7, 8, 10, 11, 14, 15, 16, 17]
  enabled: true
  immutable: [0, 1, 2, 6, 7, 8, 10, 11, 12, 13]
  n_constraints: 18
  predicates:
    a:
      attrs: {14: orig_pkts, 15: orig_ip_bytes}
      exec: 'lambda a: a[0] <= a[1]'
      text: orig_pkts <= orig_ip_bytes
    b:
      attrs: {16: resp_pkts, 17: resp_ip_bytes}
      exec: 'lambda a: a[0] <= a[1]'
      text: resp_pkts <= resp_ip_bytes
    c:
      attrs: {6: conn_state=S0, 16: resp_pkts, 17: resp_ip_bytes}
      exec: 'lambda a: int(a[0]) != 1 or int(a[1]) == int(a[2]) == 0'
      text: int(conn_state=S0) != 1 or int(resp_pkts) == int(resp_ip_bytes) == 0
    d:
      attrs: {1: proto=tcp, 14: orig_pkts, 15: orig_ip_bytes}
      exec: 'lambda a: int(a[0]) != 1 or int(a[1]) == 0 or a[2] >= 20'
      text: int(proto=tcp) != 1 or int(orig_pkts) == 0 or orig_ip_bytes >= 20
    e:
      attrs: {1: proto=tcp, 16: resp_pkts, 17: resp_ip_bytes}
      exec: 'lambda a: int(a[0]) != 1 or int(a[1]) == 0 or a[2] >= 20'
      text: int(proto=tcp) != 1 or int(resp_pkts) == 0 or resp_ip_bytes >= 20
    f:
      attrs: {1: proto=tcp, 8: conn_state=other, 14: orig_pkts, 15: orig_ip_bytes,
        16: resp_pkts, 17: resp_ip_bytes}
      exec: 'lambda a: int(a[0]) != 1 or a[2] >= a[4] or a[3] < a[5] or int(a[1])
        != 1'
      text: int(proto=tcp) != 1 or orig_pkts >= resp_pkts or orig_ip_bytes < resp_ip_bytes
        or int(conn_state=other) != 1
    g:
      attrs: {0: proto=udp, 7: conn_state=SF, 10: history=D, 11: history=Dd, 14: orig_pkts,
        16: resp_pkts}
      exec: 'lambda a: int(a[0]) != 1 or a[4] >= a[5] or (int(a[3]) == 1 and int(a[1])
        == 1)'
      text: int(proto=udp) != 1 or orig_pkts >= resp_pkts or (int(history=Dd) == 1
        and int(conn_state=SF) == 1)
    h:
      attrs: {0: proto=udp, 7: conn_state=SF, 14: orig_pkts, 15: orig_ip_bytes, 16: resp_pkts,
        17: resp_ip_bytes}
      exec: 'lambda a: int(a[0]) != 1 or a[2] < a[4] or a[3] >= a[5] or int(a[1])
        == 1'
      text: int(proto=udp) != 1 or orig_pkts < resp_pkts or orig_ip_bytes >= resp_ip_bytes
        or int(conn_state=SF) == 1
  reset_strategy: 2
